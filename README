See http://colin-scott.github.com/sts/ for an HTML version of this file.

Ever had to painstakingly dig through production logs to find the one or two inputs that lead your software to break? sts seeks to eliminate this need, thereby freeing you to debug the problematic code itself.

sts is intended for distributed SDN control software such as Floodlight. sts simulates networks in a deterministic runtime environment, allowing fine-grained control over the inputs to  unmodified* controllers.

Beyond helping developers troubleshoot problems found in production, sts is useful as a standalone integration test framework.

### Installation

sts depends on pox. To install sts, you'll just need to set up a symlink:

$ git clone git://github.com/colin-scott/sts.git
$ git clone -b debugger git://github.com/noxrepo/pox.git pox/
$ cd sts
$ ln -s ../pox pox

### Running

Take sts for test drive with:

$ ./simulator.py

This will boot up pox, generate a FatTree network with 16 hosts, and begin feeding in random inputs.

The config/ directory contains sample configurations. You can specify
a particular config file by specifing the module name of your configuration:

$ ./simulator.py -c config.my_config

See config/README for more information.

### Version Notes

sts requires python 2.7+

sts will automatically use pypy as its interpreter if you place a pypy/ directory at the top-level of the repository.

### Research

For more information about the research behind sts, see our paper: http://www.eecs.berkeley.edu/~rcs/research/hotnets12.pdf

*Automatic invariant checking requires an interface to the controllers' state.
