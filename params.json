{"name":"sts","tagline":"SDN Troubleshooting Simulator","body":"Ever had to manually dig through logs to find the one or two inputs that lead your controller software to break? sts seeks to eliminate this need, freeing you to debug the problematic code itself. \r\n\r\nsts simulates the devices of your network, allowing you to easily generate tricky test cases, interactively examine the state of the network, and automatically find the exact inputs that are responsible for triggering a given bug.\r\n\r\n![sts architecture](http://www.eecs.berkeley.edu/~rcs/research/sts_arch.jpg)\r\n\r\n### Installation\r\n\r\nsts depends on [pox](http://www.noxrepo.org/pox/about-pox/). To install sts, you'll just need to clone both repositories:\r\n\r\n```\r\n$ git clone git://github.com/ucb-sts/sts.git\r\n$ cd sts\r\n$ git clone -b debugger git://github.com/noxrepo/pox.git pox/\r\n```\r\n\r\n### Running\r\n\r\nTake sts for a test drive with:\r\n\r\n```\r\n$ ./simulator.py\r\n```\r\n\r\nThis will boot up pox, generate a 20-switch FatTree network, and begin feeding in random inputs.\r\n\r\nYou can also run sts interactively:\r\n\r\n```\r\n$ ./simulator.py -c config/interactive.py\r\n```\r\n\r\nsts can be used to replay previous executions:\r\n\r\n```\r\n$ ./simulator.py -c config/pox_example_replay.py\r\n```\r\n\r\nFinally, sts is able to identify the minimal set of inputs that trigger a given bug:\r\n\r\n```\r\n$ ./simulator.py -c config/pox_example_mcs.py\r\n```\r\n\r\nYou can turn up the verbosity of the simulator's console output by passing the '-v' flag to simulator.py. \r\n\r\nThe simulator automatically copies your configuration parameters and console output into the experiments/ directory for later examination.\r\n\r\nThe config/ directory contains sample configurations. You can specify your own config file by passing its path:\r\n\r\n```\r\n$ ./simulator.py -c config/my_config.py\r\n```\r\n\r\nSee [config/README](https://github.com/ucb-sts/sts/blob/master/config/README) for more information. \r\n\r\n### Dependencies\r\n\r\nsts requires python 2.7+\r\n\r\nTo use the advanced features of sts, you may need to install and make two dependencies:\r\n```\r\n$ sudo pip install pytrie\r\n$ (cd sts/headerspace/hassel-c && make -j)\r\n```\r\n\r\n### Will I need to modify my controller to use sts?\r\n\r\nIf your controller supports OpenFlow 1.0, sts works out of the box. You'll only need to change one line in the config file to instruct sts how to launch your controller process(es).\r\n\r\n### Research\r\n\r\nFor more information about the research behind sts, see our paper [draft](http://www.eecs.berkeley.edu/~rcs/research/sts.pdf). \r\n\r\n### Questions?\r\n\r\nSend questions or feedback to: sts-dev@googlegroups.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}