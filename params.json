{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"sts","body":"### Welcome to the homepage of sts.\r\n\r\nEver had to painstakingly dig through production logs to find the one or two inputs that lead your software to break? sts seeks to eliminate this need, thereby freeing you to debug the problematic code itself. \r\n\r\nsts is intended for distributed SDN control software such as [Floodlight](http://floodlight.openflowhub.org/).  sts simulates networks in a deterministic runtime environment, allowing fine-grained control over the inputs to  unmodified* controllers. \r\n \r\n![sts architecture](http://www.eecs.berkeley.edu/~rcs/research/sts_arch.jpg)\r\n\r\nBeyond helping developers troubleshoot problems found in production, sts is useful as a standalone integration test framework.\r\n\r\n### Installation\r\n\r\nsts depends on [pox](http://www.noxrepo.org/pox/about-pox/). To install sts, you'll just need to set up a symlink to pox:\r\n\r\n```\r\n$ git clone git://github.com/colin-scott/sts.git\r\n$ git clone -b debugger git://github.com/noxrepo/pox.git pox/\r\n$ cd sts\r\n$ ln -s ../pox pox\r\n```\r\n\r\n### Running\r\n\r\nTake sts for test drive with:\r\n\r\n```\r\n$ ./simulator.py\r\n```\r\n\r\nThis will boot up pox, generate a FatTree network with 16 hosts, and begin feeding in random inputs.\r\n\r\nThe config/ directory contains sample configurations. You can specify\r\na particular config file by specifing the module name of your configuration:\r\n\r\n```\r\n$ ./simulator.py -c config.my_config\r\n```\r\n\r\nSee [config/README](https://github.com/colin-scott/sts/blob/master/config/README) for more information. \r\n\r\n### Version Notes\r\n\r\nsts requires python 2.7+\r\n\r\nsts will automatically use [pypy](http://pypy.org/) as its interpreter if you place a pypy/ directory at the top-level of the repository.\r\n\r\n### Research\r\n\r\nFor more information about the research behind sts, see our [paper](http://www.eecs.berkeley.edu/~rcs/research/hotnets12.pdf). \r\n\r\n*Automatic invariant checking requires an interface to the controllers' state.","google":"","tagline":"Software-Defined Networking Troubleshooting Simulator"}