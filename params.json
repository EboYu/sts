{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Software-Defined Networking Troubleshooting Simulator","body":"### Welcome to the homepage of sts.\r\n\r\nEver had to painstakingly dig through logs to find the one or two inputs that lead your controller software to break? sts seeks to eliminate this need, freeing you to debug the problematic code itself. \r\n\r\nsts is intended for distributed SDN control software such as [Floodlight](http://floodlight.openflowhub.org/).  sts simulates the devices of your network in a deterministic runtime environment, allowing fine-grained control over the inputs to your unmodified* controller(s). \r\n \r\n![sts architecture](http://www.eecs.berkeley.edu/~rcs/research/sts_arch.jpg)\r\n\r\nBeyond troubleshooting, sts is also useful as a framework for programmatically generating integration tests.\r\n\r\n### Installation\r\n\r\nsts depends on [pox](http://www.noxrepo.org/pox/about-pox/). To install sts, you'll just need to clone both repositories:\r\n\r\n```\r\n$ git clone git://github.com/ucb-sts/sts.git\r\n$ cd sts\r\n$ git clone -b debugger git://github.com/noxrepo/pox.git pox/\r\n```\r\n\r\n### Running\r\n\r\nTake sts for a test drive with:\r\n\r\n```\r\n$ ./simulator.py\r\n```\r\n\r\nThis will boot up pox, generate a FatTree network with 16 hosts, and begin feeding in random inputs.\r\n\r\nYou can also run sts interactively:\r\n\r\n```\r\n$ ./simulator.py -c config.mesh\r\n```\r\n\r\nFinally, you can use sts to replay previous executions of your controller and automatically identify fault-inducing inputs:\r\n\r\n```\r\n$ ./simulator.py -c config.troubleshoot_pox_l2_learning\r\n```\r\n\r\nThe config/ directory contains sample configurations. You can specify your own config file by specifying its path:\r\n\r\n```\r\n$ ./simulator.py -c config/my_config.py\r\n```\r\n\r\nSee [config/README](https://github.com/ucb-sts/sts/blob/master/config/README) for more information. \r\n\r\n### Version Notes\r\n\r\nsts requires python 2.7+\r\n\r\nsts will automatically use [pypy](http://pypy.org/) as its interpreter if you place a pypy/ directory at the top-level of the repository.\r\n\r\n### Research\r\n\r\nFor more information about the research behind sts, see our paper [draft](http://www.eecs.berkeley.edu/~rcs/research/sts.pdf). \r\n\r\n### Questions?\r\n\r\nSend questions or feedback to: sts-dev@googlegroups.com\r\n\r\n*Automatic invariant checking requires an interface to the controllers' view of the network policy.","name":"sts","google":""}